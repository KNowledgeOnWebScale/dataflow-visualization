{
  "type": "object",
  "title": "Global defaults",
  "description": "This schema is to define the properties inside the global defaults config.",
  "$id": "globalDefaultSchema",
  "properties": {
    "graph": {
      "type": "object",
      "title": "graph",
      "description": "graph in global defaults",
      "$id": "globalDefaultsGraph",
      "properties": {
        "autoLayout": {
          "type": "boolean",
          "description": "If set to `true`, [dagre](https://github.com/dagrejs/dagre) is used to automatically determine to positions of the nodes. Individually set positions will be overwritten see [Node positioning](https://github.com/KNowledgeOnWebScale/dataflow-visualization/tree/main#node-positioning) for more information.",
          "default": false,
          "errorMessage": {
            "type": "autoLayout must be boolean"
          }
        },
        "orientation": {
          "type": "string",
          "enum": [
            "vertical",
            "horizontal"
          ],
          "description": "The orientation of the graph. If you want to work from top to bottom or from bottom to top, set `orientation` to `vertical`",
          "default": "horizontal",
          "errorMessage": {
            "type": "orientation must be string with possible values: vertical  or horizontal"
          }
        },
        "spacing": {
          "type": "number",
          "description": "Set the spacing between nodes when autolayout, vgroups or hgroups are used.The default spacing for groups is the width/2 for hgroups or the height/2 for vgroups devided by 2. If you want that larger or smaller, you can set this key to any number. The spacing will be the default times the factor.When 'autolayout' is used, spacing has only effect on the vertical distance between nodes, when the orientation is set to 'vertical'. Vice versa for 'horizontal'.",
          "default": 1,
          "errorMessage": {
            "type": "spacing must be number"
          }
        }
      }
    },
    "node": {
      "type": "object",
      "title": "node",
      "description": "node in global defaults",
      "$id": "globalDefaultsNode",
      "properties": {
        "height": {
          "type": "number",
          "description": "The height of the node.",
          "default": 50,
          "errorMessage": {
            "type": "height must be number"
          }
        },
        "width": {
          "type": "number",
          "description": "The width of the node.",
          "default": 50,
          "errorMessage": {
            "type": "width must be number"
          }
        },
        "fill": {
          "type": "string",
          "description": "Color of the node.",
          "default": "white",
          "errorMessage": {
            "type": "fill must be string"
          }
        },
        "fontsize": {
          "type": "number",
          "description": "Size of the text inside the nodes.",
          "default": 12,
          "errorMessage": {
            "type": "fontsize must be number"
          }
        },
        "image": {
          "type": "string",
          "description": "The image inside a node. This image takes up the entire width and height of the node.",
          "errorMessage": {
            "type": "image must be string"
          }
        },
        "label": {
          "type": "string",
          "description": "The text inside a node.",
          "default": "",
          "errorMessage": {
            "type": "label must be string"
          }
        },
        "shape": {
          "type": "string",
          "enum": [
            "icon",
            "8-star",
            "big-star",
            "circle",
            "cylinder",
            "diamond",
            "hexagon",
            "note",
            "rectangle",
            "square",
            "star",
            "triangle",
            "comunica",
            "rmlio",
            "solid",
            "Details"
          ],
          "description": "The shape of the node.",
          "default": "square",
          "errorMessage": {
            "type": "shape must be string with possible values: icon , 8-star , big-star , circle , cylinder , diamond , hexagon , note , rectangle , square , star , triangle , comunica , rmlio , solid  or Details"
          }
        },
        "iconName": {
          "type": "string",
          "description": "When 'shape' is set to 'icon', you can set 'iconName' to anything you find in [react-icons](https://react-icons.github.io/react-icons/). Since this is a third-party library, not all styling will work. Only `fill`, `strokeWidth`, `width` and `height` will have effect.",
          "errorMessage": {
            "type": "iconName must be string"
          }
        },
        "stroke": {
          "type": "string",
          "description": "The color of the stroke of the node.",
          "default": "black",
          "errorMessage": {
            "type": "stroke must be string"
          }
        },
        "strokeDasharray": {
          "type": [
            "number",
            "string"
          ],
          "description": "The dash pattern of the node.",
          "default": 0,
          "errorMessage": {
            "type": "strokeDasharray must be number or string"
          }
        },
        "strokeWidth": {
          "type": "number",
          "description": "The thickness of the stroke of the nodes.",
          "default": 1,
          "errorMessage": {
            "type": "strokeWidth must be number"
          }
        },
        "title": {
          "type": "string",
          "description": "The title of a node. E.g. useful to name a parentNode. Notice that this is not the same as an ID. If you give a node a title, that title will show up not in the middle of the node, but at the top.",
          "errorMessage": {
            "type": "title must be string"
          }
        },
        "topText": {
          "type": "string",
          "description": "Set on top of the node.",
          "errorMessage": {
            "type": "topText must be string"
          }
        },
        "zIndex": {
          "type": "number",
          "description": "Controls the stacking order of the nodes.",
          "default": 0,
          "errorMessage": {
            "type": "zIndex must be number"
          }
        },
        "hgroup": {
          "type": "string",
          "description": "Align a group of nodes vertically.",
          "errorMessage": {
            "type": "hgroup must be string"
          }
        },
        "vgroup": {
          "type": "string",
          "description": "Align a group of nodes horizontally.",
          "errorMessage": {
            "type": "vgroup must be string"
          }
        },
        "presets": {
          "type": "object",
          "description": "Create node presets.",
          "additionalProperties": {
            "type": "object",
            "title": "node",
            "description": "node in global defaults",
            "$id": "presetNestedNode",
            "properties": {
              "height": {
                "type": "number",
                "description": "The height of the node.",
                "default": 50,
                "errorMessage": {
                  "type": "height must be number"
                }
              },
              "width": {
                "type": "number",
                "description": "The width of the node.",
                "default": 50,
                "errorMessage": {
                  "type": "width must be number"
                }
              },
              "fill": {
                "type": "string",
                "description": "Color of the node.",
                "default": "white",
                "errorMessage": {
                  "type": "fill must be string"
                }
              },
              "fontsize": {
                "type": "number",
                "description": "Size of the text inside the nodes.",
                "default": 12,
                "errorMessage": {
                  "type": "fontsize must be number"
                }
              },
              "image": {
                "type": "string",
                "description": "The image inside a node. This image takes up the entire width and height of the node.",
                "errorMessage": {
                  "type": "image must be string"
                }
              },
              "label": {
                "type": "string",
                "description": "The text inside a node.",
                "default": "",
                "errorMessage": {
                  "type": "label must be string"
                }
              },
              "shape": {
                "type": "string",
                "enum": [
                  "icon",
                  "8-star",
                  "big-star",
                  "circle",
                  "cylinder",
                  "diamond",
                  "hexagon",
                  "note",
                  "rectangle",
                  "square",
                  "star",
                  "triangle",
                  "comunica",
                  "rmlio",
                  "solid",
                  "Details"
                ],
                "description": "The shape of the node.",
                "default": "square",
                "errorMessage": {
                  "type": "shape must be string with possible values: icon , 8-star , big-star , circle , cylinder , diamond , hexagon , note , rectangle , square , star , triangle , comunica , rmlio , solid  or Details"
                }
              },
              "iconName": {
                "type": "string",
                "description": "When 'shape' is set to 'icon', you can set 'iconName' to anything you find in [react-icons](https://react-icons.github.io/react-icons/). Since this is a third-party library, not all styling will work. Only `fill`, `strokeWidth`, `width` and `height` will have effect.",
                "errorMessage": {
                  "type": "iconName must be string"
                }
              },
              "stroke": {
                "type": "string",
                "description": "The color of the stroke of the node.",
                "default": "black",
                "errorMessage": {
                  "type": "stroke must be string"
                }
              },
              "strokeDasharray": {
                "type": [
                  "number",
                  "string"
                ],
                "description": "The dash pattern of the node.",
                "default": 0,
                "errorMessage": {
                  "type": "strokeDasharray must be number or string"
                }
              },
              "strokeWidth": {
                "type": "number",
                "description": "The thickness of the stroke of the nodes.",
                "default": 1,
                "errorMessage": {
                  "type": "strokeWidth must be number"
                }
              },
              "title": {
                "type": "string",
                "description": "The title of a node. E.g. useful to name a parentNode. Notice that this is not the same as an ID. If you give a node a title, that title will show up not in the middle of the node, but at the top.",
                "errorMessage": {
                  "type": "title must be string"
                }
              },
              "topText": {
                "type": "string",
                "description": "Set on top of the node.",
                "errorMessage": {
                  "type": "topText must be string"
                }
              },
              "zIndex": {
                "type": "number",
                "description": "Controls the stacking order of the nodes.",
                "default": 0,
                "errorMessage": {
                  "type": "zIndex must be number"
                }
              },
              "hgroup": {
                "type": "string",
                "description": "Align a group of nodes vertically.",
                "errorMessage": {
                  "type": "hgroup must be string"
                }
              },
              "vgroup": {
                "type": "string",
                "description": "Align a group of nodes horizontally.",
                "errorMessage": {
                  "type": "vgroup must be string"
                }
              }
            }
          }
        }
      }
    },
    "edge": {
      "type": "object",
      "title": "edge",
      "description": "edge in global defaults",
      "$id": "globalDefaultsEdge",
      "properties": {
        "animated": {
          "type": "boolean",
          "description": "Set a default animation for the edge. See also [Animations](https://github.com/KNowledgeOnWebScale/dataflow-visualization/tree/main#animations).",
          "default": false,
          "errorMessage": {
            "type": "animated must be boolean"
          }
        },
        "animation": {
          "type": "string",
          "description": "See [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/animation) for more information about animation. An example is e.g. `dashdraw .2s linear infinite`.",
          "errorMessage": {
            "type": "animation must be string"
          }
        },
        "color": {
          "type": "string",
          "description": "The color of the edge.",
          "default": "black",
          "errorMessage": {
            "type": "color must be string"
          }
        },
        "label": {
          "type": "string",
          "description": "Set the label of the edge.",
          "errorMessage": {
            "type": "label must be string"
          }
        },
        "thickness": {
          "type": "number",
          "description": "The thickness of the edge.",
          "default": 1.2,
          "errorMessage": {
            "type": "thickness must be number"
          }
        },
        "strokeDasharray": {
          "type": [
            "number",
            "string"
          ],
          "description": "The pattern of dashes of the edges. See [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray#example) for more information.",
          "default": 0,
          "errorMessage": {
            "type": "strokeDasharray must be number or string"
          }
        },
        "source": {
          "type": "string",
          "description": "ID of the source node.",
          "errorMessage": {
            "type": "source must be string"
          }
        },
        "target": {
          "type": "string",
          "description": "ID of the target node.",
          "errorMessage": {
            "type": "target must be string"
          }
        },
        "sourceHandle": {
          "type": "string",
          "enum": [
            "left",
            "right",
            "top",
            "bottom"
          ],
          "description": "Set where the edge should attach to the source node.",
          "errorMessage": {
            "type": "sourceHandle must be string with possible values: left , right , top  or bottom"
          }
        },
        "targetHandle": {
          "type": "string",
          "enum": [
            "left",
            "right",
            "top",
            "bottom"
          ],
          "description": "Set where the edge should attach to the target node.",
          "errorMessage": {
            "type": "targetHandle must be string with possible values: left , right , top  or bottom"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "default",
            "step",
            "smoothstep",
            "straight"
          ],
          "description": "Set how the edge should look like (straight line, curve ...). `default` = [Bézier curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).",
          "default": "default",
          "errorMessage": {
            "type": "type must be string with possible values: default , step , smoothstep  or straight"
          }
        },
        "zIndex": {
          "type": "number",
          "description": "Controls the stacking order of the edge. For more information, go to the [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index).",
          "errorMessage": {
            "type": "zIndex must be number"
          }
        },
        "markerStart": {
          "type": "object",
          "title": "Arrowhead schema",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "arrow",
                "arrowclosed"
              ],
              "description": "Set the type of the arrowhead.",
              "errorMessage": "Type of arrow must be string with possible values: arrow  or arrowclosed"
            },
            "orient": {
              "type": [
                "string",
                "number"
              ],
              "description": "Set the orient of the arrowhead. See [the MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/orient) for more information.",
              "errorMessage": "Orient of arrow must be number or string"
            },
            "color": {
              "type": "string",
              "description": "Set the color of the arrowhead. If you do not specify a color, the color of the arrowhead will be the same as the color of the edge.",
              "errorMessage": "Color of arrow must be string"
            },
            "size": {
              "type": "number",
              "description": "Set the size of the arrowhead.",
              "errorMessage": "Width of arrow must be integer"
            }
          }
        },
        "markerEnd": {
          "type": "object",
          "title": "Arrowhead schema",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "arrow",
                "arrowclosed"
              ],
              "description": "Set the type of the arrowhead.",
              "errorMessage": "Type of arrow must be string with possible values: arrow  or arrowclosed"
            },
            "orient": {
              "type": [
                "string",
                "number"
              ],
              "description": "Set the orient of the arrowhead. See [the MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/orient) for more information.",
              "errorMessage": "Orient of arrow must be number or string"
            },
            "color": {
              "type": "string",
              "description": "Set the color of the arrowhead. If you do not specify a color, the color of the arrowhead will be the same as the color of the edge.",
              "errorMessage": "Color of arrow must be string"
            },
            "size": {
              "type": "number",
              "description": "Set the size of the arrowhead.",
              "errorMessage": "Width of arrow must be integer"
            }
          }
        },
        "presets": {
          "type": "object",
          "description": "Create edge presets.",
          "additionalProperties": {
            "type": "object",
            "title": "edge",
            "description": "edge in global defaults",
            "$id": "presetNestedEdge",
            "properties": {
              "animated": {
                "type": "boolean",
                "description": "Set a default animation for the edge. See also [Animations](https://github.com/KNowledgeOnWebScale/dataflow-visualization/tree/main#animations).",
                "default": false,
                "errorMessage": {
                  "type": "animated must be boolean"
                }
              },
              "animation": {
                "type": "string",
                "description": "See [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/animation) for more information about animation. An example is e.g. `dashdraw .2s linear infinite`.",
                "errorMessage": {
                  "type": "animation must be string"
                }
              },
              "color": {
                "type": "string",
                "description": "The color of the edge.",
                "default": "black",
                "errorMessage": {
                  "type": "color must be string"
                }
              },
              "label": {
                "type": "string",
                "description": "Set the label of the edge.",
                "errorMessage": {
                  "type": "label must be string"
                }
              },
              "thickness": {
                "type": "number",
                "description": "The thickness of the edge.",
                "default": 1.2,
                "errorMessage": {
                  "type": "thickness must be number"
                }
              },
              "strokeDasharray": {
                "type": [
                  "number",
                  "string"
                ],
                "description": "The pattern of dashes of the edges. See [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray#example) for more information.",
                "default": 0,
                "errorMessage": {
                  "type": "strokeDasharray must be number or string"
                }
              },
              "source": {
                "type": "string",
                "description": "ID of the source node.",
                "errorMessage": {
                  "type": "source must be string"
                }
              },
              "target": {
                "type": "string",
                "description": "ID of the target node.",
                "errorMessage": {
                  "type": "target must be string"
                }
              },
              "sourceHandle": {
                "type": "string",
                "enum": [
                  "left",
                  "right",
                  "top",
                  "bottom"
                ],
                "description": "Set where the edge should attach to the source node.",
                "errorMessage": {
                  "type": "sourceHandle must be string with possible values: left , right , top  or bottom"
                }
              },
              "targetHandle": {
                "type": "string",
                "enum": [
                  "left",
                  "right",
                  "top",
                  "bottom"
                ],
                "description": "Set where the edge should attach to the target node.",
                "errorMessage": {
                  "type": "targetHandle must be string with possible values: left , right , top  or bottom"
                }
              },
              "type": {
                "type": "string",
                "enum": [
                  "default",
                  "step",
                  "smoothstep",
                  "straight"
                ],
                "description": "Set how the edge should look like (straight line, curve ...). `default` = [Bézier curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).",
                "default": "default",
                "errorMessage": {
                  "type": "type must be string with possible values: default , step , smoothstep  or straight"
                }
              },
              "zIndex": {
                "type": "number",
                "description": "Controls the stacking order of the edge. For more information, go to the [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/CSS/z-index).",
                "errorMessage": {
                  "type": "zIndex must be number"
                }
              },
              "markerStart": {
                "type": "object",
                "title": "Arrowhead schema",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "arrow",
                      "arrowclosed"
                    ],
                    "description": "Set the type of the arrowhead.",
                    "errorMessage": "Type of arrow must be string with possible values: arrow  or arrowclosed"
                  },
                  "orient": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Set the orient of the arrowhead. See [the MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/orient) for more information.",
                    "errorMessage": "Orient of arrow must be number or string"
                  },
                  "color": {
                    "type": "string",
                    "description": "Set the color of the arrowhead. If you do not specify a color, the color of the arrowhead will be the same as the color of the edge.",
                    "errorMessage": "Color of arrow must be string"
                  },
                  "size": {
                    "type": "number",
                    "description": "Set the size of the arrowhead.",
                    "errorMessage": "Width of arrow must be integer"
                  }
                }
              },
              "markerEnd": {
                "type": "object",
                "title": "Arrowhead schema",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "arrow",
                      "arrowclosed"
                    ],
                    "description": "Set the type of the arrowhead.",
                    "errorMessage": "Type of arrow must be string with possible values: arrow  or arrowclosed"
                  },
                  "orient": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Set the orient of the arrowhead. See [the MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/orient) for more information.",
                    "errorMessage": "Orient of arrow must be number or string"
                  },
                  "color": {
                    "type": "string",
                    "description": "Set the color of the arrowhead. If you do not specify a color, the color of the arrowhead will be the same as the color of the edge.",
                    "errorMessage": "Color of arrow must be string"
                  },
                  "size": {
                    "type": "number",
                    "description": "Set the size of the arrowhead.",
                    "errorMessage": "Width of arrow must be integer"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "errorMessage": {
    "properties": {},
    "type": "Global settings are expected to be initialized in an object"
  }
}